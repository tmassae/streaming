
-----------------------------------------------
Exercícios :: Schema Registry
-----------------------------------------------
TERMINAL 1

docker exec -it schema-registry bash


-----------------------------------------------
1. Visualizar os dados do tópico users;
-----------------------------------------------
TERMINAL 2

docker exec -it broker bash

root@broker:/# kafka-topics --bootstrap-server localhost:9092 -topic users --desc
ribe
Topic: users    PartitionCount: 1       ReplicationFactor: 1    Configs:
        Topic: users    Partition: 0    Leader: 1       Replicas: 1     Isr: 1  Offline:

-----------------------------------------------
2. Criar o tópico users-avro
-----------------------------------------------
root@broker:/# kafka-topics --bootstrap-server localhost:9092 --topic users-avro --create --partitions 3 --replication-factor 1
Created topic users-avro.

root@broker:/# kafka-topics --bootstrap-server localhost:9092 -topic users-avro -
-describe
Topic: users-avro       PartitionCount: 3       ReplicationFactor: 1    Configs:
        Topic: users-avro       Partition: 0    Leader: 1       Replicas: 1     Isr: 1   Offline:
        Topic: users-avro       Partition: 1    Leader: 1       Replicas: 1     Isr: 1   Offline:
        Topic: users-avro       Partition: 2    Leader: 1       Replicas: 1     Isr: 1   Offline:

-----------------------------------------------
a) Usar o kafka-avro-console-producer para enviar 1 mensagem
-----------------------------------------------

TERMINAL 1

root@schema-registry:/# kafka-avro-console-producer --broker-list broker:29092 --topic users-avro --property schema.registry.url=http://localhost:8081
--property value.schema='{"type":"record","name":"myrecord","fields":[{"name":"id","type":"int"},{"name":"nome","type":"string"}]}'

[2022-10-17 13:32:56,218] INFO [Producer clientId=console-producer] Cluster ID: h1TD-JnHR3619GJdhzpRfA (org.apache.kafka.clients.Metadata)
{"id":1, "nome":"tatiana"}


-----------------------------------------------
b) Usar o kafka-avro-console-consumer para consumir a mensagem
-----------------------------------------------

TERMINAL 2

root@schema-registry:/# kafka-avro-console-consumer --topic users-avro --bootstrap-server broker:29092 --property schema.registry.url=http://localhost:8081 \ --from-beginning
g offset for partition users-avro-0 to offset 0. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
{"id":1,"nome":"tatiana"}

-----------------------------------------------
c) Visualizar o esquema no Control Center
-----------------------------------------------

- Acessando http://localhost:9021/ 

- Acessar topics/users-avro/schema/value

{
  "fields": [
    {
      "name": "id",
      "type": "int"
    },
    {
      "name": "nome",
      "type": "string"
    }
  ],
  "name": "myrecord",
  "type": "record"
}


-----------------------------------------------
3. Visualizar os dados do users-avro no KSQL
-----------------------------------------------

docker exec -it ksqldb-server ksql http://ksqldb-server:8088

print "users-avro" from beginning limit 5;

ksql> print "users-avro" from beginning limit 5;
Key format: SESSION(AVRO) or HOPPING(AVRO) or TUMBLING(AVRO) or AVRO or SESSION(PROTOBUF) or HOPPING(PROTOBUF) or TUMBLING(PROTOBUF) or PROTOBUF or SESSION(JSON) or HOPPING(JSON) or TUMBLING(JSON) or JSON or SESSION(JSON_SR) or HOPPING(JSON_SR) or TUMBLING(JSON_SR) or JSON_SR or SESSION(KAFKA_INT) or HOPPING(KAFKA_INT) or TUMBLING(KAFKA_INT) or KAFKA_INT or SESSION(KAFKA_BIGINT) or HOPPING(KAFKA_BIGINT) or TUMBLING(KAFKA_BIGINT) or KAFKA_BIGINT or SESSION(KAFKA_DOUBLE) or HOPPING(KAFKA_DOUBLE) or TUMBLING(KAFKA_DOUBLE) or KAFKA_DOUBLE or SESSION(KAFKA_STRING) or HOPPING(KAFKA_STRING) or TUMBLING(KAFKA_STRING) or KAFKA_STRING
Value format: AVRO or KAFKA_STRING
rowtime: 10/17/22 7:59:50 PM UTC, key: <null>, value: {"id": 2, "nome": "tatiana", "unit": "massae"}
rowtime: 10/17/22 1:34:43 PM UTC, key: <null>, value: {"id": 2, "nome": "maria"}
rowtime: 10/17/22 7:58:44 PM UTC, key: <null>, value: {"id": 1, "nome": "tatiana", "unit": "sakata"}
rowtime: 10/17/22 7:59:55 PM UTC, key: <null>, value: {"id": 3, "nome": "maria", "unit": "sakata"}
rowtime: 10/17/22 1:33:19 PM UTC, key: <null>, value: {"id": 1, "nome": "tatiana"}

-----------------------------------------------
4. Criar um stream users_avro1 para o tópico users-avro
-----------------------------------------------

ksql> create stream users_avro1 with (kafka_topic='users-avro', value_format='avro');

 Message
----------------
 Stream created
----------------

-----------------------------------------------
5. Visualizar os dados do stream users-avro1
-----------------------------------------------

ksql> set 'auto.offset.reset'='earliest';

select * from users-avro1 emit changes;

ksql> select * from USERS_AVRO1 EMIT CHANGES;
+---------------+---------------+---------------+---------------+
|ROWTIME        |ROWKEY         |ID             |NOME           |
+---------------+---------------+---------------+---------------+
|1666013599667  |null           |1              |tatiana        |
|1666013683029  |null           |2              |maria          |

-----------------------------------------------
6. Usar o kafka-avro-console-producer para adicionar um novo campo chamado “unit” com valor padrão “1”
-----------------------------------------------

root@schema-registry:/# kafka-avro-console-producer \
--topic users-avro --broker-list broker:29092 \ 
--property schema.registry.url=http://localhost:8081 \
--property value.schema='{"type": "record", "name": "myrecord", "fields": [ {"name": "id", "type": "int"}, {"name": "nome", "type": "string"}, {"name": "unit", "type":"string", "default": "1"}]}'

[2022-10-17 19:58:25,879] INFO [Producer clientId=console-producer] Cluster ID: h1TD-JnHR3619GJdhzpRfA (org.apache.kafka.clients.Metadata)
{"id":1, "nome":"tatiana", "unit":"sakata"}
{"id":2, "nome":"tatiana", "unit":"massae"}
{"id":3, "nome":"maria", "unit":"sakata"}
{"id":4, "nome":"eder", "unit":"silva"}

-----------------------------------------------
7. Usar o kafka-avro-console-consumer para consumir as mensagens
-----------------------------------------------

root@schema-registry:/# kafka-avro-console-consumer --topic users-avro \
--bootstrap-server broker:29092 \ 
--property schema.registry.url=http://localhost:8081 \
--from-beginning

[2022-10-17 19:59:06,334] INFO [Consumer clientId=consumer-console-consumer-88675-1, groupId=console-consumer-88675] Resetting offset for partition users-avro-0 to offset 0. (org.apache.kafka.clients.consumer.internals.SubscriptionState)
{"id":2,"nome":"maria"}
{"id":1,"nome":"tatiana","unit":"sakata"}
{"id":1,"nome":"tatiana"}
{"id":2,"nome":"tatiana","unit":"massae"}
{"id":3,"nome":"maria","unit":"sakata"}

-----------------------------------------------
8. Comparar os esquemas do users-avro no Control Center
-----------------------------------------------

- Acessar http://localhost:9021/ 
- Acessar topics/users-avro/schema/value/version history/2


VERSÃO 1

{
 
  "fields": [
 
    {
 
      "name": "id",
 
      "type": "int"
 
    },
 
    {
 
      "name": "nome",
 
      "type": "string"
 
    }
 
  ],
 
  "name": "myrecord",
 
  "type": "record"
 
}


VERSÃO 2

 
{
 
  "fields": [
 
    {
 
      "name": "id",
 
      "type": "int"
 
    },
 
    {
 
      "name": "nome",
 
      "type": "string"
 
    },
 
    {
 
      "default": "1",
 
      "name": "unit",
 
      "type": "string"
 
    }
 
  ],
 
  "name": "myrecord",
 
  "type": "record"
 
}
-----------------------------------------------
9. Visualizar os dados no stream do tópico users-avro
-----------------------------------------------

root@broker:/# kafka-topics --bootstrap-server localhost:9092 -list
...
msg-cli
msg-rapida
msg-usuario-csv
pageviews
users
users-avro
users-avro1


root@broker:/# kafka-topics --bootstrap-server localhost:9092 --topic users-avro --describe
Topic: users-avro       PartitionCount: 3       ReplicationFactor: 1    Configs:
        Topic: users-avro       Partition: 0    Leader: 1       Replicas: 1     Isr: 1  Offline:
        Topic: users-avro       Partition: 1    Leader: 1       Replicas: 1     Isr: 1  Offline:
        Topic: users-avro       Partition: 2    Leader: 1       Replicas: 1     Isr: 1  Offline:
root@broker:/# kafka-topics --bootstrap-server localhost:9092 --topic users-avro --list
users-avro


ksql> set 'auto.offset.reset'='earliest';
Successfully changed local property 'auto.offset.reset' from 'earliest' to 'earliest'.

ksql> select * from USERS_AVRO1 EMIT CHANGES limit 10;
+---------------+---------------+---------------+---------------+
|ROWTIME        |ROWKEY         |ID             |NOME           |
+---------------+---------------+---------------+---------------+
|1666036790068  |null           |2              |tatiana        |
|1666013599667  |null           |1              |tatiana        |
|1666013683029  |null           |2              |maria          |
|1666036724638  |null           |1              |tatiana        |
|1666036795044  |null           |3              |maria          |
